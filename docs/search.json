[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ABopsC",
    "section": "",
    "text": "Welcome to ABopsC\n\nWelcome to our site on which we teach you about AP Computer Science A Units 1-4 to prepare our classmates for the AP Exam. We also have a cars-themed lab for you to practice the concepts in application!\nLearn More\n\n\n   Scavenger Hunt      Lesson      Labs      Scores"
  },
  {
    "objectID": "pages/assignments.html",
    "href": "pages/assignments.html",
    "title": "Assignments",
    "section": "",
    "text": "{% include lab_nav.html %}"
  },
  {
    "objectID": "pages/assignments.html#assignments",
    "href": "pages/assignments.html#assignments",
    "title": "Assignments",
    "section": "Assignments",
    "text": "Assignments\n\nAssignment 1\nAssignment 2"
  },
  {
    "objectID": "pages/scavenger.html",
    "href": "pages/scavenger.html",
    "title": "Scavenger Hunt",
    "section": "",
    "text": "Welcome to our scavenger hunt!\nWe have computers set up across the room with each question. Start at question 1 and make sure to record your answers. The responses will create message and the key to a special prize!"
  },
  {
    "objectID": "pages/grading.html",
    "href": "pages/grading.html",
    "title": "Grading",
    "section": "",
    "text": "{% include lab_nav.html %}"
  },
  {
    "objectID": "pages/grading.html#grading-checklist-period-2-apcsa",
    "href": "pages/grading.html#grading-checklist-period-2-apcsa",
    "title": "Grading",
    "section": "Grading Checklist Period 2 APCSA",
    "text": "Grading Checklist Period 2 APCSA\n\n\n\n\n\nName\n\n\nScore\n\n\n\n\nName\n\n\nScore\n\n\n\n\n\nName:  Grade:  Submit"
  },
  {
    "objectID": "pages/about.html",
    "href": "pages/about.html",
    "title": "About ABopsC",
    "section": "",
    "text": "Welcome to our site on which we teach you about AP Computer Science A Units 1-4 to prepare our classmates for the AP Exam. We also have a cars-themed lab for you to practice the concepts in application!"
  },
  {
    "objectID": "pages/userControl.html",
    "href": "pages/userControl.html",
    "title": "\nLogin\n",
    "section": "",
    "text": "Login\n\n\n\n\n\n\nUsername\n\n\n\n\nPassword\n\n\n\n\n\nSubmit\n\n\n\n\n\nOr sign up instead.\n\n\n\n\n\n\nLogout\n\n\n\n\n\n&lt;h1&gt;Sign Up&lt;/h1&gt;\n&lt;table&gt;\n    &lt;tr&gt;\n        &lt;th&gt;First Name&lt;/th&gt;\n        &lt;th&gt;&lt;input type=\"text\" id=\"fname\" name=\"fname\" placeholder=\"enter your first name...\"&gt;&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;th&gt;Last Name&lt;/th&gt;\n        &lt;th&gt;&lt;input type=\"text\" id=\"lname\" name=\"lname\" placeholder=\"enter your last name...\"&gt;&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;th&gt;Username&lt;/th&gt;\n        &lt;th&gt;&lt;input type=\"text\" id=\"username\" name=\"username\" placeholder=\"enter a username...\"&gt;&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;th&gt;Password&lt;/th&gt;\n        &lt;th&gt;&lt;input type=\"password\" id=\"pswd\" name=\"pswd\" placeholder=\"enter a password...\"&gt;&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;th&gt;Confirm Password&lt;/th&gt;\n        &lt;th&gt;&lt;input type=\"password\" id=\"pswdagain\" name=\"pswdagain\" placeholder=\"re-enter password...\"&gt;&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;th&gt;&lt;button class=\"btn\" type=\"submit\" value=\"Submit\" onclick=\"checkFields()\"&gt;Submit&lt;/button&gt;&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;th&gt; Or &lt;a onclick=\"loginPage()\"&gt;login&lt;/a&gt; instead.&lt;/th&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;"
  },
  {
    "objectID": "pages/lesson.html",
    "href": "pages/lesson.html",
    "title": "Units 1 to 4 Lesson",
    "section": "",
    "text": "Units 1-4 are roughly half of the exam\nThe best way to learn it is through code flow which means integrating all key concepts into a code that you build upon\nStart with the scavenger hunt quiz"
  },
  {
    "objectID": "pages/lesson.html#setup",
    "href": "pages/lesson.html#setup",
    "title": "Units 1 to 4 Lesson",
    "section": "",
    "text": "Units 1-4 are roughly half of the exam\nThe best way to learn it is through code flow which means integrating all key concepts into a code that you build upon\nStart with the scavenger hunt quiz"
  },
  {
    "objectID": "pages/lesson.html#lesson",
    "href": "pages/lesson.html#lesson",
    "title": "Units 1 to 4 Lesson",
    "section": "Lesson",
    "text": "Lesson\n\nUnit 1\nSet the scene: you are a teenager who has their license and wants to find a car to buy. When you go to the car dealership, you realize that there are many different things you have to keep track of. You have to keep track of the car brands you look at, the prices of the cars, phone numbers of different sales representatives, etc.\nTo make it easy on yourself, you want to develop a computerized code that is able to sort through different prices, car brands, etc.\nThe first step to doing this is through storing these different variables just mentioned as data types - primitive data types. You use variables to store data in Java. Types of primitive data include integers, doubles, booleans, etc.\nNow, there are so many things you need to make when buying a car: price, brand, milage, color, etc. We can set the price of a car can be stored as a double, the car brand as a strings. If you want to store whether you like a car or not, you can store that information as a boolean data type.\n\npublic class Car {\n    public static void main(String[] args) {\n        int year = 2023;\n        double price = 30000.00;\n        boolean isElectric = true;\n        \n        System.out.println(\"Year: \" + year);\n        System.out.println(\"Price: $\" + price);\n        System.out.println(\"Is Electric: \" + isElectric);\n    }\n}\n\nThere are operators like the modulo operator where the remainder is computed or there’s division and multiplication. If you ever want to compare car prices, you can set up a code with scanner input which is also a very common with consoles.\n\n\n\nThis is an image\n\n\n\nimport java.util.Scanner;\n\npublic class CarPrice {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter the price of the car: \");\n        double price = scanner.nextDouble();\n\n        System.out.println(\"The price of the car is $\" + price);\n\n        scanner.close();\n    }\n}\n\nWe can also use compound operators which follows the form a += 1 or age ++ in order to indicate a = a + 1. For example, if you want to model the amount of cars that have entered the highway. Each time the light turns green the number of cars is car += 2.\n\nint cars = 0; // starting number of cars\nint numCarsEntering = 2; // number of cars entering at a time\nint numIterations = 5; // number of times to loop\n\nfor (int i = 0; i < numIterations; i++) {\n    cars += numCarsEntering; // use compound operator to add cars\n    System.out.println(\"Number of cars on highway: \" + cars);\n}\n\n\n\nUnit 2\nUnit 2 mostly focuses on objects, classes, methods, and constructors.\nIn order to use the data you need to first create a class. In this class, you can then create objects and methods to access the data.\nAn object is a reference type and can be used to access data. A constructor makes data that is stored in an object. For example, I can make a car object and create a constructor that includes different characteristics of the car such as its brand, color, price, and milage.\n\npublic class Car {\n    private String brand;\n    private String color;\n    private double price;\n    private double mileage;\n    \n    public Car(String brand, String color, double price, double mileage) {\n        this.brand = brand;\n        this.color = color;\n        this.price = price;\n        this.mileage = mileage;\n    }\n    \n    // Getters and setters\n    public String getBrand() {\n        return brand;\n    }\n    \n    public void setBrand(String brand) {\n        this.brand = brand;\n    }\n    \n    public String getColor() {\n        return color;\n    }\n    \n    public void setColor(String color) {\n        this.color = color;\n    }\n    \n    public double getPrice() {\n        return price;\n    }\n    \n    public void setPrice(double price) {\n        this.price = price;\n    }\n    \n    public double getMileage() {\n        return mileage;\n    }\n    \n    public void setMileage(double mileage) {\n        this.mileage = mileage;\n    }\n}\n\nGetters and setters use to manipulate the variables. Getters retrieve the variables and setters set the variable.\nYou can also use methods to make the object perform certain actions. The method includes the scope which indicates if it is public or private allowing other classes/objects to access it or not. There is also the return type. Void does not return any data. Next is the name of the method which usually describes its action. The parameters include what variables are included in the method. Finally, the body actually performs the action.\n\n\n\nThis is an image\n\n\nThe method can compare the price of two cars for example. You can create code that outputs the cheaper car when entering the name of the two cars.\n\npublic class Car {\n    private String name;\n    private double price;\n\n    public Car(String name, double price) {\n        this.name = name;\n        this.price = price;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public double getPrice() {\n        return price;\n    }\n\n    public static String cheaperCar(String car1Name, double car1Price, String car2Name, double car2Price) {\n        Car car1 = new Car(car1Name, car1Price);\n        Car car2 = new Car(car2Name, car2Price);\n\n        if (car1.getPrice() < car2.getPrice()) {\n            return car1.getName();\n        } else {\n            return car2.getName();\n        }\n    }\n\n    public static void main(String[] args) {\n        String cheaperCarName = cheaperCar(\"Toyota\", 20000.0, \"Honda\", 25000.0);\n        System.out.println(\"The cheaper car is: \" + cheaperCarName);\n    }\n}\n\nIt is also important to learn about the math classes. They perform common mathematical functions such as absolute value, exponent power, square root, random number generation, etc.\nIf acceleration is an important factor in deciding which car you want, absolute value may be important. The car can constantly display your acceleration speed no mater if you are going forward or backward.\n\npublic class Acceleration {\n    public static void main(String[] args) {\n        double velocity1 = 10.0;\n        double velocity2 = 5.0;\n        double time = 2.0;\n        \n        // Calculate acceleration using absolute value\n        double acceleration = Math.abs((velocity2 - velocity1) / time);\n        \n        System.out.println(\"The acceleration is \" + acceleration);\n    }\n}\n\nMaybe there is a whole registry of cars and you do not want to search though each one. Use the random function to randomly display a car and its characteristics to see if it is the right fit.\n\nimport java.util.Random;\n\npublic class CarRegistry {\n    public static void main(String[] args) {\n        // Define car registry\n        String[] make = {\"Honda\", \"Toyota\", \"Ford\", \"Chevrolet\", \"BMW\"};\n        String[] model = {\"Civic\", \"Camry\", \"F-150\", \"Silverado\", \"X5\"};\n        int[] year = {2015, 2016, 2017, 2018, 2019, 2020};\n        double[] price = {15000.0, 20000.0, 25000.0, 30000.0, 35000.0, 40000.0};\n        \n        // Select a random car from the registry\n        Random rand = new Random();\n        int index = rand.nextInt(make.length);\n        String selectedMake = make[index];\n        String selectedModel = model[index];\n        int selectedYear = year[rand.nextInt(year.length)];\n        double selectedPrice = price[rand.nextInt(price.length)];\n        \n        // Display the selected car and its characteristics\n        System.out.println(\"Selected Car: \" + selectedMake + \" \" + selectedModel);\n        System.out.println(\"Year: \" + selectedYear);\n        System.out.println(\"Price: $\" + selectedPrice);\n    }\n}"
  },
  {
    "objectID": "pages/lesson.html#hack-3",
    "href": "pages/lesson.html#hack-3",
    "title": "Units 1 to 4 Lesson",
    "section": "Hack 3:",
    "text": "Hack 3:\n\nCreate a Car object named myCar with the following details:\n\n\nMake: “Toyota”\nModel: “Camry”\nYear: 2019\nPrice: 25000.0\n\n\nPrint the car details using the getMake(), getModel(), getYear(), and getPrice() methods.\nCheck if the car is affordable within a budget of $20000 using the isAffordable() method and print the result using if-else statement.\nDetermine and print the car’s classification based on its price using if-else-if statement:\n\n\nIf the price is greater than $50000, print “The car is a luxury car.”\nIf the price is greater than $30000, print “The car is a mid-range car.”\nOtherwise, print “The car is an affordable car.”\n\n\npublic class Car {\n    private String make;\n    private String model;\n    private int year;\n    private double price;\n    \n    // Constructor\n    public Car(String make, String model, int year, double price) {\n        this.make = make;\n        this.model = model;\n        this.year = year;\n        this.price = price;\n    }\n    \n    // Getter methods\n    public String getMake() {\n        return make;\n    }\n    \n    public String getModel() {\n        return model;\n    }\n    \n    public int getYear() {\n        return year;\n    }\n    \n    public double getPrice() {\n        return price;\n    }\n    \n    // Method to determine if the car is affordable or not\n    public boolean isAffordable(double budget) {\n        if (price <= budget) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    \n    // Main method\n    public static void main(String[] args) {\n        // Create a new Car object\n\n        // Print the car details\n        \n        // Check if the car is affordable with a budget of $20000 using an if-else statement\n       \n        // Check if the car is a luxury car based on its price using if-else-if statement\n    \n    }\n}\nCar.main(null);"
  },
  {
    "objectID": "pages/labs.html",
    "href": "pages/labs.html",
    "title": "Labs",
    "section": "",
    "text": "Scavenger Hunt Lesson Lab Work Scoring"
  },
  {
    "objectID": "pages/scoring.html",
    "href": "pages/scoring.html",
    "title": "Lab Scores",
    "section": "",
    "text": "Scavenger Hunt Lesson Lab Work Scoring\n\n\n\n\nScore Rundown:\n\nLab - 2 points\nLesson - 1 point\nTotal - 3 points\n\n\n\n&lt;/div&gt;"
  },
  {
    "objectID": "pages/lesson.html#hack-2",
    "href": "pages/lesson.html#hack-2",
    "title": "Units 1 to 4 Lesson",
    "section": "Hack 2",
    "text": "Hack 2\nCreate a class named “Car” with the following attributes:\nmake (String) model (String) year (int) price (double) isUsed (boolean) Create a constructor that initializes all of these attributes.\nCreate a method named “printCarDetails()” that prints out all of the attributes of the car.\nIn the main method, create an array of three cars with the following details:\nCar 1: Make = “Toyota”, Model = “Corolla”, Year = 2022, Price = 24999.99, isUsed = false Car 2: Make = “Honda”, Model = “Accord”, Year = 2018, Price = 18999.99, isUsed = true Car 3: Make = “Ford”, Model = “Mustang”, Year = 2020, Price = 34999.99, isUsed = true Loop through the array and print out the details of each car using the “printCarDetails()” method.\n\npublic class Car {\n    // create constructor\n    public void printCarDetails() {\n        // method to print car details\n    }\n}"
  },
  {
    "objectID": "pages/scavenger.html#question-1",
    "href": "pages/scavenger.html#question-1",
    "title": "Scavenger Hunt",
    "section": "Question 1",
    "text": "Question 1\n\n\nCode\nint x = 56/10*5*4;\nif (x<10) {\n    System.out.println(\"extra credit\");\n}\nelse if (x<= 50){\n    System.out.println(\"apple\");\n}\nelse if (x > 50 &&  x <= 100){\n    System.out.println(\"candy\");\n}\nelse if (x > 100 &&  x <= 115){\n    System.out.println(\"chocolate\");\n}\nelse if (x > 115 &&  x <= 150){\n    System.out.println(\"dinero\");\n}"
  },
  {
    "objectID": "pages/scavenger.html#question-2",
    "href": "pages/scavenger.html#question-2",
    "title": "Scavenger Hunt",
    "section": "Question 2",
    "text": "Question 2\n\n\nCode\npublic static void main(String [] args) {\n    String[] words = {\"and\", \"more\", \"is\", \"also\", \"plus\"};\n    answer(words);\n    System.out.println(answer(words));\n}\n\npublic static String answer(String words[]) {\n    String first = words[0];\n    for (int i = 1 ; i < words.length ; i++) {\n        if ((words[i].compareTo(first)) < 0) {\n            first = words[i];\n        }\n    } \n    return first;\n}"
  },
  {
    "objectID": "pages/scavenger.html#question-3",
    "href": "pages/scavenger.html#question-3",
    "title": "Scavenger Hunt",
    "section": "Question 3",
    "text": "Question 3\n\n\nCode\n// x is true, y is false\nif (!(x||y) || (x && y)) {\n    System.out.print(\"on\");\n}\nif (!(x&&y) && (x || y)) {\n    System.out.print(\"under\");\n}\nelse {\n    System.out.print(\"in\");\n}"
  },
  {
    "objectID": "pages/scavenger.html#question-4",
    "href": "pages/scavenger.html#question-4",
    "title": "Scavenger Hunt",
    "section": "Question 4",
    "text": "Question 4\n\n\nCode\nint x = 10;\nif (x*3 <= 30) {\n    x++;\n}\nif (x > 31) {\n    x += 4;\n}\nSystem.out.print(x);\n\n\nA. 11 (chair)\nB. 15 (backpack)\nC. 31 (table)\nD. error (floor)"
  },
  {
    "objectID": "pages/scavenger.html#question-5",
    "href": "pages/scavenger.html#question-5",
    "title": "Scavenger Hunt",
    "section": "Question 5",
    "text": "Question 5\nItems whose value does not change are called…\nA. variable (Mr.M’s desk)\nB. stay-same (bathroom)\nC. literal (outside)\nD. unvariable (hetvi’s backpack)"
  }
]