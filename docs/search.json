[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ABOPSC",
    "section": "",
    "text": "Lesson Lab Work Scoring"
  },
  {
    "objectID": "pages/assignments.html",
    "href": "pages/assignments.html",
    "title": "Assignments",
    "section": "",
    "text": "{% include lab_nav.html %}"
  },
  {
    "objectID": "pages/assignments.html#assignments",
    "href": "pages/assignments.html#assignments",
    "title": "Assignments",
    "section": "Assignments",
    "text": "Assignments\n\nAssignment 1\nAssignment 2"
  },
  {
    "objectID": "pages/scavenger.html",
    "href": "pages/scavenger.html",
    "title": "Scavenger Hunt",
    "section": "",
    "text": "Lesson Lab Work Scoring"
  },
  {
    "objectID": "pages/grading.html",
    "href": "pages/grading.html",
    "title": "Grading",
    "section": "",
    "text": "{% include lab_nav.html %}"
  },
  {
    "objectID": "pages/grading.html#grading-checklist-period-2-apcsa",
    "href": "pages/grading.html#grading-checklist-period-2-apcsa",
    "title": "Grading",
    "section": "Grading Checklist Period 2 APCSA",
    "text": "Grading Checklist Period 2 APCSA\n\n\n\n\n\nName\n\n\nScore\n\n\n\n\nName\n\n\nScore\n\n\n\n\n\nName:  Grade:  Submit"
  },
  {
    "objectID": "pages/about.html",
    "href": "pages/about.html",
    "title": "About ABopsC",
    "section": "",
    "text": "Welcome to our site on which we teach you about AP Computer Science A Units 1-4 to prepare our classmates for the AP Exam. We also have a cars-themed lab for you to practice the concepts in application!"
  },
  {
    "objectID": "pages/userControl.html",
    "href": "pages/userControl.html",
    "title": "ABopsC",
    "section": "",
    "text": "{% include login.html %} {% include signup.html %}"
  },
  {
    "objectID": "pages/lesson.html",
    "href": "pages/lesson.html",
    "title": "Lesson",
    "section": "",
    "text": "Units 1-4 are roughly half of the exam\nThe best way to learn it is through code flow which means integrating all key concepts into a code that you build upon\nStart with the scavenger hunt quiz"
  },
  {
    "objectID": "pages/lesson.html#lesson",
    "href": "pages/lesson.html#lesson",
    "title": "Lesson",
    "section": "Lesson",
    "text": "Lesson\n\nUnit 1\nSet the scene: you are a teenager who has their license and wants to find a car to buy. When you go to the car dealership, you realize that there are many different things you have to keep track of. You have to keep track of the car brands you look at, the prices of the cars, phone numbers of different sales representatives, etc.\nTo make it easy on yourself, you want to develop a computerized code that is able to sort through different prices, car brands, etc.\nThe first step to doing this is through storing these different variables just mentioned as data types - primitive data types. You use variables to store data in Java. Types of primitive data include integers, doubles, booleans, etc.\nNow, there are so many things you need to make when buying a car: price, brand, milage, color, etc. We can set the price of a car can be stored as a double, the car brand as a strings. If you want to store whether you like a car or not, you can store that information as a boolean data type.\nNow that you have data and variables declared, you can also compare prices of different cars through expressions and assignment statements. we will go more in depth about boolean comparison statement in Unit 3. Casting, the assignment of one data type to another, can be used for rounding. This can make prices more customer-friendly and easier to compare.\nThere are operators like the modulo operator where the remainder is computed or there’s division and multiplication. If you ever want to compare car prices, you can set up a code with scanner input which is also a very common with consoles.\nimage\nWe can also use compound operators which follows the form a += 1 or age ++ in order to indicate a = a + 1. For example, if you want to model the amount of cars that have entered the highway. Each time the light turns green the number of cars is car += 2."
  },
  {
    "objectID": "pages/labs.html",
    "href": "pages/labs.html",
    "title": "Labs",
    "section": "",
    "text": "Lesson Lab Work Scoring"
  },
  {
    "objectID": "pages/scoring.html",
    "href": "pages/scoring.html",
    "title": "Lab Scores",
    "section": "",
    "text": "Lesson Lab Work Scoring\n\n\n\n\nScore Rundown:\n\nLab - 2 points\nLesson - 1 point\nTotal - 3 points\n\n\n\n</div>"
  },
  {
    "objectID": "pages/lesson.html#hack-3",
    "href": "pages/lesson.html#hack-3",
    "title": "Lesson",
    "section": "Hack 3:",
    "text": "Hack 3:\n\nCreate a Car object named myCar with the following details:\n\n\nMake: “Toyota”\nModel: “Camry”\nYear: 2019\nPrice: 25000.0\n\n\nPrint the car details using the getMake(), getModel(), getYear(), and getPrice() methods.\nCheck if the car is affordable within a budget of $20000 using the isAffordable() method and print the result using if-else statement.\nDetermine and print the car’s classification based on its price using if-else-if statement:\n\n\nIf the price is greater than $50000, print “The car is a luxury car.”\nIf the price is greater than $30000, print “The car is a mid-range car.”\nOtherwise, print “The car is an affordable car.”\n\n\npublic class Car {\n    private String make;\n    private String model;\n    private int year;\n    private double price;\n    \n    // Constructor\n    public Car(String make, String model, int year, double price) {\n        this.make = make;\n        this.model = model;\n        this.year = year;\n        this.price = price;\n    }\n    \n    // Getter methods\n    public String getMake() {\n        return make;\n    }\n    \n    public String getModel() {\n        return model;\n    }\n    \n    public int getYear() {\n        return year;\n    }\n    \n    public double getPrice() {\n        return price;\n    }\n    \n    // Method to determine if the car is affordable or not\n    public boolean isAffordable(double budget) {\n        if (price <= budget) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    \n    // Main method\n    public static void main(String[] args) {\n        // Create a new Car object\n\n        // Print the car details\n        \n        // Check if the car is affordable with a budget of $20000 using an if-else statement\n       \n        // Check if the car is a luxury car based on its price using if-else-if statement\n    \n    }\n}\nCar.main(null);"
  }
]